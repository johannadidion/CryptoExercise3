
import java.util.*; 
import java.lang.*;
import java.math.BigInteger;
import java.util.Math;

public class RSA{

    static BigInteger[] gcd(BigInteger p, BigInteger q) {
        if (q.compareTo(BigInteger.ZERO)==0)
           return new BigInteger[] { p, BigInteger.ONE, BigInteger.ZERO};
  
        BigInteger[] vals = gcd(q, p.mod(q));
        BigInteger d = vals[0];
        BigInteger a = vals[2];
        BigInteger b = vals[1].subtract(p.divide(q).multiply(vals[2]));
        return new BigInteger[] { d, a, b };
     }

    public static void main(String[] args) 
    { 
        //  return array [d, a, b] such that d = gcd(p, q), ap + bq = d
        BigInteger ea = new BigInteger("2064502724322065619610920801703770332444"+
        "544578216378001086293531541437374183762889883952350512303123079541900923"+
        "236233763161664622129759456230282585413446407867738585722011359806614520"+
        "232070965281852076618382612714679676252453566235434477739937086238884216"+
        "665488842132820363214479571428652601988484224495946375721070361900809019"+
        "329649759575762397833605938043186770042654743067422241477268365617031178"+
        "172027178755693566409032818917422094610812754447975895865178682453225583"+
        "191912212367134587486285799782155109152944427348690163315056825740636659"+
        "649124179137271843769782829849167189203185398850604993866726625112631363");
        BigInteger eb = new BigInteger("34587662847217365866782720959838215110565"+
        "9756356047916616789608178750837186397400300720629651340906876883086914495"+
        "0353311978866052040064363702600015228811590369358649434072299278539091596"+
        "2284026257408231084441450691237485490191438394253375183144496635422843240"+
        "5145711811352973922639155549967535687324229764372344162085165004285404573"+
        "1775322923554814370604240098388885770803645303928867431833230438167684293"+
        "4919432676173770566068439620427908223353228195821807949208588447811468609"+
        "8035666343747253331397342623111000982654071759143224287261895337445430397"+
        "635372322031624510827582994475842436489318181834008077000862716");
        BigInteger vals[] = gcd(ea, eb);

        BigInteger ca = new BigInteger("599595716443335281998311836057824471423872"+
        "9492409468586803268851651897982489605697578945063584118058495857566704892"+
        "8737866308470404019499991755598178094734716803895358688104226543908881758"+
        "8061113649282685562685793490922993153055756402440331270258091628957614506"+
        "1145641710898773716694259274134096807200722126713867117182107034934525959"+
        "7129437645221182415436966722888021636858763594577979234757925588810668236"+
        "2545743068441745513171129264302343262741956564684731698919731241320987319"+
        "6313791487769645026827092218659930429999110898767912706001022732903885738"+
        "03610119258785910206047147140049692741145838272637793573255535");
        BigInteger cb = new BigInteger("277083507015043957236153345832385332333113"+
        "5769889806688952647723143090100332051468165048542378394448963218541675902"+
        "0470359250676792965456569368040887679801039511943407416966551036294039460"+
        "5270654789369947091711807415164253528274576897513891642615872796223711989"+
        "0937352175934340987683034250582715361270008618676286594711314192182238464"+
        "8199510429364534779667105963166286872309561338317565105751299663036243194"+
        "0979234313005927161165356106692805755819935490027739816018961316420941475"+
        "7242894166135226111274887275728717755076389566803028116652956415673871044"+
        "558606548743531525162718902734213942283806624617372725072274578");

        BigInteger n = new BigInteger("2969137743448355327270876080101054338540503"+
        "2598789596302501439956270900900228500674659524254193643815623767476941800"+
        "2104612524591681560095590234970477860635176844623820339514255291065927829"+
        "5524811626878015858630283055801066768074106075626751467085779562898859072"+
        "1467395238036884295104245652705973420598747747799177716270699561486322817"+
        "6191966838047898473794033307901871686714676364714597531349846397210960502"+
        "2440637990931976478053161446536228883589512353452610817258565587291176075"+
        "3415830424183382063674828925856916074966544257943598141483298578313567797"+
        "61901706016990032962092873983791585459395968897828575512138547");
        
        if(vals[0].compareTo(BigInteger.ONE) == 0)
        {
            if(vals[1].signum() == -1)
            {
                ca = ca.modInverse(n);
                System.out.println("Inverse: "+ca);
                vals[1] = vals[1].negate();
            }
            if(vals[2].signum() == -1)
            {
                cb = cb.modInverse(n);
                vals[2] = vals[2].negate();
            }
            BigInteger m = ca.modPow(vals[1], n).multiply(cb.modPow(vals[2], n)).mod(n);
            System.out.println("Message m: "+m);
        }   
    }
}